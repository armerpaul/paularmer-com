@import "variables";
@import "flex";

// Transitions
@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-duration:    $duration;
  -o-transition-duration:      $duration;
  -webkit-transition-duration: $duration;
  transition-duration:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

// Animations
@mixin animation-delay($delay) {
  -moz-animation-delay:    $delay;
  -o-animation-delay:      $delay;
  -webkit-animation-delay: $delay;
  animation-delay:         $delay;
}
@mixin animation-duration($duration) {
  -moz-animation-duration:    $duration;
  -o-animation-duration:      $duration;
  -webkit-animation-duration: $duration;
  animation-duration:         $duration;
}
@mixin animation-iteration-count($iteration-count) {
  -moz-animation-iteration-count:    $iteration-count;
  -o-animation-iteration-count:      $iteration-count;
  -webkit-animation-iteration-count: $iteration-count;
  animation-iteration-count:         $iteration-count;
}
@mixin animation-timing-function($timing) {
  -moz-animation-timing-function:    $timing;
  -o-animation-timing-function:      $timing;
  -webkit-animation-timing-function: $timing;
  animation-timing-function:         $timing;
}
@mixin animation-fill-mode($fill-mode) {
  -moz-animation-fill-mode:    $fill-mode;
  -o-animation-fill-mode:      $fill-mode;
  -webkit-animation-fill-mode: $fill-mode;
  animation-fill-mode:         $fill-mode;
}
@mixin apply-animation($name, $duration) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }

  -moz-animation-name:    $name;
  -o-animation-name:      $name;
  -webkit-animation-name: $name;
  animation-name:         $name;

  @include animation-duration($duration);
}

@mixin centered-content($content-width) {
  $mobile-side-padding: 0.75rem;
  $desktop-side-padding: calc(50% - #{$content-width} / 2);
  $content-width-with-padding: $content-width + 2 * $mobile-side-padding;

  padding-left: $mobile-side-padding;
  padding-right: $mobile-side-padding;

  @media (min-width: $content-width-with-padding) {
    padding-left: $desktop-side-padding;
    padding-right: $desktop-side-padding;
  }
}

@mixin wide-content() {
  @include centered-content($content-width-wide);
}

@mixin narrow-content() {
  @include centered-content($content-width-narrow);
}

@mixin styles-for-tablet-or-larger() {
  @media (min-width: $content-width-narrow) {
    @content;
  }
}

@mixin styles-for-desktop() {
  @media (min-width: $content-width-wide) {
    @content;
  }
}

@mixin pill-shape($line-height) {
  display: inline-block;
  border-radius: 1em * $line-height / 2;
  $vert-padding: ($line-height - 1) / 2 * 1em;
  $side-padding: $line-height / 2 * 1em;
  padding: $vert-padding $side-padding;
}

@mixin standard-link() {
  color: $color-poppy;
  cursor: pointer;
  @include transition-duration(150ms);
  @include transition-property(color);

  &:hover {
    color: $color-marigold;
  }
}